name: main

on: push

jobs:
  build-n-upload-translations:
    runs-on: ubuntu-latest

    outputs:
      branch: ${{ steps.variables.outputs.branch }}
      version: ${{ steps.variables.outputs.version }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Cache pip dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Setup Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: 3.x

    - name: Install Python dependencies
      run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

    - name: Test build
      run: sphinx-build -W -d build/doctrees source build/html

    - name: Build translation files
      run: sphinx-build -W -q -b gettext source build/locale

    - name: Set crowdin branch
      id: variables
      run: |
        echo "Ref: $GITHUB_REF"
        BRANCH=${GITHUB_REF##*/}
        echo "Branch: $BRANCH"
        echo "::set-output name=branach::$(echo $BRANCH)"
        VERSION="${BRANCH##*-}"
        echo "Version: $BRANCH"
        echo "::set-output name=version::$(echo $VERSION)"
    - name: Upload to crowdin
      uses: crowdin/github-action@1.0.10
      with:
        crowdin_branch_name: ${{ steps.variables.outputs.version }}
        config: 'crowdin.yaml'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        CROWDIN_PROJECT_ID: ${{ secrets.CROWDIN_PROJECT_ID }}
        CROWDIN_PERSONAL_TOKEN: ${{ secrets.CROWDIN_TOKEN }}
  publish-docker:
    runs-on: ubuntu-latest
    needs: build-n-upload-translations
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ghcr.io/felixoi/spongedocs:${{ needs.build-n-upload-translations.outputs.version }}
          build-args: |
            GITHUB_USER=${{ github.actor }}
            GITHUB_TOKEN=${{ github.token }}
            GITHUB_REPO=SpongeDocs
            GITHUB_VERSION=${{ needs.build-n-upload-translations.outputs.branch }}
            CROWDIN_TOKEN=${{ secrets.CROWDIN_TOKEN }}
            CROWDIN_PROJECT_ID=${{ secrets.CROWDIN_PROJECT_ID }}
            VERSION=${{ needs.build-n-upload-translations.outputs.version }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache